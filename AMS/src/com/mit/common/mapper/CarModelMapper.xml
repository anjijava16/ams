<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mit.common.dao.CarModelMapper" >
  <resultMap id="BaseResultMap" type="com.mit.common.model.CarModel" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="CARBRAND" property="carbrand" jdbcType="VARCHAR" />
    <result column="CARMODEL" property="carmodel" jdbcType="VARCHAR" />
    <result column="CARYEAR" property="caryear" jdbcType="VARCHAR" />
    <result column="CARPRICE" property="carprice" jdbcType="BIGINT" />
    <result column="STATUS" property="status" jdbcType="BIGINT" />
    <result column="ADDTIME" property="addtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, CARBRAND, CARMODEL, CARYEAR,CARPRICE,STATUS,ADDTIME
  </sql>
  
  <sql id="OracleDialectPrefix" >
    <if test="firstRow != null" >
     select * from ( select row_.*, rownum rownum_ from (
    </if>
  </sql>
   <sql id="OracleDialectSuffix" >
    <if test="firstRow != null" >
     <![CDATA[ ) row_ ) where rownum_ <= #{lastRow} and rownum_ > #{firstRow}]]>
    </if>
  </sql>
  
  <sql id="where_all">
 
  	<if test="findContent != null and findContent !='' " >
         and (carbrand  like '%'||#{findContent,jdbcType=VARCHAR}||'%'     or
        carmodel like '%'||#{findContent,jdbcType=VARCHAR}||'%' or
        caryear like '%'||#{findContent,jdbcType=VARCHAR}||'%' )  
      </if>
    
  </sql>
  <select id="findAll" resultMap="BaseResultMap" >
   <include refid="OracleDialectPrefix" />
  	 select 
    <include refid="Base_Column_List" />
    from T_BASIC_CAR_MODEL where STATUS=1 
    <include refid="where_all"/>
      order by id desc
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="findCount" resultMap="BaseResultMap" >
 	 select count(id) from  T_BASIC_CAR_MODEL where STATUS=1 
  	<include refid="where_all" />
  </select>
    
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from T_BASIC_CAR_MODEL
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from T_BASIC_CAR_MODEL
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insertSelective"  parameterType="com.mit.common.model.CarModel" >
    <selectKey keyProperty="id" resultType="java.lang.Long"
			order="BEFORE">
		<![CDATA[select SEQ_BASIC_CAR_MODEL_ID.NEXTVAL as id from dual]]>
		</selectKey>
    insert into T_BASIC_CAR_MODEL
    <trim prefix="(" suffix=")" suffixOverrides="," >
        id,

      <if test="carbrand != null" >
        CARBRAND,
      </if>
      <if test="carmodel != null" >
        CARMODEL,
      </if>
      <if test="caryear != null" >
        CARYEAR,
      </if>
      <if test="carprice != null" >
        CARPRICE,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
        #{id,jdbcType=BIGINT},
      <if test="carbrand != null" >
        #{carbrand,jdbcType=VARCHAR},
      </if>
      <if test="carmodel != null" >
        #{carmodel,jdbcType=VARCHAR},
      </if>
       <if test="caryear != null" >
        #{caryear,jdbcType=VARCHAR},
      </if>
      <if test="carprice != null" >
        #{carprice,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mit.common.model.CarModel" >
    update T_BASIC_CAR_MODEL
    <set >
      <if test="carbrand != null" >
        carbrand = #{carbrand,jdbcType=VARCHAR},
      </if>
      <if test="carmodel != null" >
        carmodel = #{carmodel,jdbcType=VARCHAR},
      </if>
       <if test="caryear != null" >
        caryear = #{caryear,jdbcType=VARCHAR},
      </if>
       <if test="carprice != null" >
        carprice = #{carprice,jdbcType=BIGINT},
      </if>
       <if test="status != null" >
        status = #{status,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
   <update id="updateStatusById" parameterType="java.lang.Long">
    update T_BASIC_CAR_MODEL set status='0'
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>